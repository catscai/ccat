// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: server/proto/test.proto

package test

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TestRQ struct {
	Uid                  *uint64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Age                  *uint32  `protobuf:"varint,3,opt,name=age" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRQ) Reset()         { *m = TestRQ{} }
func (m *TestRQ) String() string { return proto.CompactTextString(m) }
func (*TestRQ) ProtoMessage()    {}
func (*TestRQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c358994e3a383a, []int{0}
}
func (m *TestRQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRQ.Unmarshal(m, b)
}
func (m *TestRQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRQ.Marshal(b, m, deterministic)
}
func (m *TestRQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRQ.Merge(m, src)
}
func (m *TestRQ) XXX_Size() int {
	return xxx_messageInfo_TestRQ.Size(m)
}
func (m *TestRQ) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRQ.DiscardUnknown(m)
}

var xxx_messageInfo_TestRQ proto.InternalMessageInfo

func (m *TestRQ) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *TestRQ) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TestRQ) GetAge() uint32 {
	if m != nil && m.Age != nil {
		return *m.Age
	}
	return 0
}

type TestRS struct {
	Uid                  *uint64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Age                  *uint32  `protobuf:"varint,3,opt,name=age" json:"age,omitempty"`
	Reply                *string  `protobuf:"bytes,4,opt,name=reply" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRS) Reset()         { *m = TestRS{} }
func (m *TestRS) String() string { return proto.CompactTextString(m) }
func (*TestRS) ProtoMessage()    {}
func (*TestRS) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c358994e3a383a, []int{1}
}
func (m *TestRS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRS.Unmarshal(m, b)
}
func (m *TestRS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRS.Marshal(b, m, deterministic)
}
func (m *TestRS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRS.Merge(m, src)
}
func (m *TestRS) XXX_Size() int {
	return xxx_messageInfo_TestRS.Size(m)
}
func (m *TestRS) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRS.DiscardUnknown(m)
}

var xxx_messageInfo_TestRS proto.InternalMessageInfo

func (m *TestRS) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *TestRS) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TestRS) GetAge() uint32 {
	if m != nil && m.Age != nil {
		return *m.Age
	}
	return 0
}

func (m *TestRS) GetReply() string {
	if m != nil && m.Reply != nil {
		return *m.Reply
	}
	return ""
}

func init() {
	proto.RegisterType((*TestRQ)(nil), "proto.TestRQ")
	proto.RegisterType((*TestRS)(nil), "proto.TestRS")
}

func init() { proto.RegisterFile("server/proto/test.proto", fileDescriptor_12c358994e3a383a) }

var fileDescriptor_12c358994e3a383a = []byte{
	// 128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x49, 0x2d, 0x2e, 0xd1, 0x03, 0x33,
	0x85, 0x58, 0xc1, 0x94, 0x92, 0x03, 0x17, 0x5b, 0x48, 0x6a, 0x71, 0x49, 0x50, 0xa0, 0x90, 0x00,
	0x17, 0x73, 0x69, 0x66, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4b, 0x10, 0x88, 0x29, 0x24, 0xc4,
	0xc5, 0x92, 0x97, 0x98, 0x9b, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x83, 0x54,
	0x25, 0xa6, 0xa7, 0x4a, 0x30, 0x2b, 0x30, 0x6a, 0xf0, 0x06, 0x81, 0x98, 0x4a, 0x61, 0x50, 0x13,
	0x82, 0xc9, 0x35, 0x41, 0x48, 0x84, 0x8b, 0xb5, 0x28, 0xb5, 0x20, 0xa7, 0x52, 0x82, 0x05, 0xac,
	0x0c, 0xc2, 0x01, 0x04, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xdd, 0xe7, 0x61, 0xba, 0x00, 0x00, 0x00,
}
